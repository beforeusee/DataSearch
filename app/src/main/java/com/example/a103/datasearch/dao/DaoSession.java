package com.example.a103.datasearch.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.a103.datasearch.data.CoefficientParameters;
import com.example.a103.datasearch.data.Material;
import com.example.a103.datasearch.data.MaterialCategories;
import com.example.a103.datasearch.data.MaterialCuttingLimits;
import com.example.a103.datasearch.data.Tool;
import com.example.a103.datasearch.data.Machine;

import com.example.a103.datasearch.dao.CoefficientParametersDao;
import com.example.a103.datasearch.dao.MaterialDao;
import com.example.a103.datasearch.dao.MaterialCategoriesDao;
import com.example.a103.datasearch.dao.MaterialCuttingLimitsDao;
import com.example.a103.datasearch.dao.ToolDao;
import com.example.a103.datasearch.dao.MachineDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig coefficientParametersDaoConfig;
    private final DaoConfig materialDaoConfig;
    private final DaoConfig materialCategoriesDaoConfig;
    private final DaoConfig materialCuttingLimitsDaoConfig;
    private final DaoConfig toolDaoConfig;
    private final DaoConfig machineDaoConfig;

    private final CoefficientParametersDao coefficientParametersDao;
    private final MaterialDao materialDao;
    private final MaterialCategoriesDao materialCategoriesDao;
    private final MaterialCuttingLimitsDao materialCuttingLimitsDao;
    private final ToolDao toolDao;
    private final MachineDao machineDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        coefficientParametersDaoConfig = daoConfigMap.get(CoefficientParametersDao.class).clone();
        coefficientParametersDaoConfig.initIdentityScope(type);

        materialDaoConfig = daoConfigMap.get(MaterialDao.class).clone();
        materialDaoConfig.initIdentityScope(type);

        materialCategoriesDaoConfig = daoConfigMap.get(MaterialCategoriesDao.class).clone();
        materialCategoriesDaoConfig.initIdentityScope(type);

        materialCuttingLimitsDaoConfig = daoConfigMap.get(MaterialCuttingLimitsDao.class).clone();
        materialCuttingLimitsDaoConfig.initIdentityScope(type);

        toolDaoConfig = daoConfigMap.get(ToolDao.class).clone();
        toolDaoConfig.initIdentityScope(type);

        machineDaoConfig = daoConfigMap.get(MachineDao.class).clone();
        machineDaoConfig.initIdentityScope(type);

        coefficientParametersDao = new CoefficientParametersDao(coefficientParametersDaoConfig, this);
        materialDao = new MaterialDao(materialDaoConfig, this);
        materialCategoriesDao = new MaterialCategoriesDao(materialCategoriesDaoConfig, this);
        materialCuttingLimitsDao = new MaterialCuttingLimitsDao(materialCuttingLimitsDaoConfig, this);
        toolDao = new ToolDao(toolDaoConfig, this);
        machineDao = new MachineDao(machineDaoConfig, this);

        registerDao(CoefficientParameters.class, coefficientParametersDao);
        registerDao(Material.class, materialDao);
        registerDao(MaterialCategories.class, materialCategoriesDao);
        registerDao(MaterialCuttingLimits.class, materialCuttingLimitsDao);
        registerDao(Tool.class, toolDao);
        registerDao(Machine.class, machineDao);
    }
    
    public void clear() {
        coefficientParametersDaoConfig.clearIdentityScope();
        materialDaoConfig.clearIdentityScope();
        materialCategoriesDaoConfig.clearIdentityScope();
        materialCuttingLimitsDaoConfig.clearIdentityScope();
        toolDaoConfig.clearIdentityScope();
        machineDaoConfig.clearIdentityScope();
    }

    public CoefficientParametersDao getCoefficientParametersDao() {
        return coefficientParametersDao;
    }

    public MaterialDao getMaterialDao() {
        return materialDao;
    }

    public MaterialCategoriesDao getMaterialCategoriesDao() {
        return materialCategoriesDao;
    }

    public MaterialCuttingLimitsDao getMaterialCuttingLimitsDao() {
        return materialCuttingLimitsDao;
    }

    public ToolDao getToolDao() {
        return toolDao;
    }

    public MachineDao getMachineDao() {
        return machineDao;
    }

}
